(set-option :auto-config false)
(set-option :model true)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_prj ((s LSet) (m Map)) Map ((_ map (ite (Bool Elt Elt) Elt)) s m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_to_set ((m Map)) LSet ((_ map (> (Elt Elt) Bool)) m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_max ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (> (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_min ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (< (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_shift ((n Int) (m Map)) Map (lambda ((i Int)) (select m (- i n))))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun papp7 () Int)
(declare-fun lq_tmp$36$x$35$$35$1511 () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun lq_tmp$36$x$35$$35$2886 () Int)
(declare-fun lq_tmp$36$x$35$$35$2196 () Int)
(declare-fun totalityError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r () Int)
(declare-fun Data.Set.Internal.singleton () Int)
(declare-fun Data.Set.Internal.union () Int)
(declare-fun lq_tmp$36$x$35$$35$2402 () Int)
(declare-fun lq_tmp$36$x$35$$35$2592 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805715$35$$35$d39p () Str)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805731$35$$35$d39F () Int)
(declare-fun lq_tmp$36$x$35$$35$4553 () Int)
(declare-fun lq_tmp$36$x$35$$35$1701 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805753$35$$35$d3a1 () Bool)
(declare-fun lq_tmp$36$x$35$$35$2234 () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun lq_tmp$36$x$35$$35$2269 () Int)
(declare-fun lq_tmp$36$x$35$$35$1817 () Int)
(declare-fun fix$36$$36$dIP_a20t () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805703$35$$35$d39d () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805757$35$$35$d3a5 () Int)
(declare-fun lq_tmp$36$x$35$$35$4380 () Int)
(declare-fun lq_tmp$36$x$35$$35$1175 () Int)
(declare-fun lq_tmp$36$x$35$$35$1377 () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun lq_tmp$36$x$35$$35$4042 () Int)
(declare-fun lq_tmp$36$x$35$$35$1083 () Int)
(declare-fun l$35$$35$a1Yc () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1821 () Int)
(declare-fun x_Tuple74 () Int)
(declare-fun literal$35$$35$a1Yr () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun lq_tmp$36$x$35$$35$4592 () Int)
(declare-fun lq_tmp$36$x$35$$35$3414 () Int)
(declare-fun Main.removeLiteralInstances () Int)
(declare-fun lq_tmp$36$x$35$$35$1865 () Int)
(declare-fun lq_tmp$36$x$35$$35$2954 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805762$35$$35$d3aa () Int)
(declare-fun VV$35$$35$F$35$$35$145 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1783 () Int)
(declare-fun tail () Int)
(declare-fun GHC.IO.Handle.Types.$36$WFileHandle () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o$35$$35$k_$35$$35$1085 () Int)
(declare-fun Data.Set.Internal.insert () Int)
(declare-fun lq_tmp$36$x$35$$35$4089 () Int)
(declare-fun x_Tuple73 () Int)
(declare-fun lq_tmp$36$x$35$$35$998 () Int)
(declare-fun lq_tmp$36$x$35$$35$3879 () Int)
(declare-fun lq_tmp$36$x$35$$35$877 () Int)
(declare-fun isJust () Int)
(declare-fun Data.Foldable.notElem () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805699$35$$35$d399 () Str)
(declare-fun lq_tmp$36$x$35$$35$3957 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805698$35$$35$d398 () Str)
(declare-fun GHC.Real.div () Int)
(declare-fun lq_tmp$36$x$35$$35$2310 () Int)
(declare-fun lq_tmp$36$x$35$$35$2398 () Int)
(declare-fun lq_tmp$36$x$35$$35$3391 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805733$35$$35$d39H () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805697$35$$35$d397 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805696$35$$35$d396 () Str)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun GHC.IO.Handle.Types.DuplexHandle () Int)
(declare-fun lq_tmp$36$x$35$$35$3102 () Int)
(declare-fun lq_tmp$36$x$35$$35$3300 () Int)
(declare-fun GHC.List.span () Int)
(declare-fun lq_tmp$36$x$35$$35$2255 () Int)
(declare-fun GHC.IO.Handle.Types.FileHandle () Int)
(declare-fun lq_tmp$36$x$35$$35$2082 () Int)
(declare-fun lq_tmp$36$x$35$$35$2714 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805695$35$$35$d395 () Str)
(declare-fun Main.removeLiteral () Int)
(declare-fun lq_tmp$36$x$35$$35$4546 () Int)
(declare-fun lq_tmp$36$x$35$$35$2320 () Int)
(declare-fun l$35$$35$a1Y2 () Int)
(declare-fun lq_tmp$36$x$35$$35$3686 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805758$35$$35$d3a6 () Bool)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun Data.Set.Internal.toList () Int)
(declare-fun lq_tmp$36$x$35$$35$2089 () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun GHC.IO.IOMode.WriteMode () Int)
(declare-fun lq_tmp$36$x$35$$35$4096 () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun x_Tuple52 () Int)
(declare-fun GHC.IO.Handle.Types.NewlineMode () Int)
(declare-fun lq_tmp$36$x$35$$35$2396 () Int)
(declare-fun GHC.IO.Handle.Types.LF () Int)
(declare-fun lq_tmp$36$x$35$$35$2972 () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805730$35$$35$d39E () Int)
(declare-fun GHC.List.last () Int)
(declare-fun lit$36$chooseLiteral$39$$58$$32$empty$32$list () Str)
(declare-fun lq_tmp$36$x$35$$35$2242 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805716$35$$35$d39q () Str)
(declare-fun GHC.List.zipWith () Int)
(declare-fun papp5 () Int)
(declare-fun GHC.IO.Handle.Types.NoBuffering () Int)
(declare-fun snd () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805708$35$$35$d39i () Int)
(declare-fun GHC.Classes.$36$fEqInt () Int)
(declare-fun VV$35$$35$F$35$$35$149 () Str)
(declare-fun lq_tmp$36$x$35$$35$2074 () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805700$35$$35$d39a () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805768$35$$35$d3ag () Int)
(declare-fun lq_tmp$36$x$35$$35$2276 () Int)
(declare-fun lq_tmp$36$x$35$$35$756 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805704$35$$35$d39e () Int)
(declare-fun lq_tmp$36$x$35$$35$1880 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805702$35$$35$d39c () Str)
(declare-fun GHC.IO.Handle.Text.hGetBuf () Int)
(declare-fun x_Tuple66 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805706$35$$35$d39g () Int)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun lq_tmp$36$x$35$$35$3200 () Int)
(declare-fun lq_tmp$36$x$35$$35$4656 () Int)
(declare-fun ds_d38z () Int)
(declare-fun lq_tmp$36$x$35$$35$2946 () Int)
(declare-fun lq_tmp$36$x$35$$35$2574 () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805713$35$$35$d39n () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun GHC.IO.Handle.Types.Handle__ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805711$35$$35$d39l () Int)
(declare-fun lq_tmp$36$x$35$$35$3447 () Int)
(declare-fun x_Tuple63 () Int)
(declare-fun lq_tmp$36$x$35$$35$3294 () Int)
(declare-fun lq_tmp$36$x$35$$35$4383 () Int)
(declare-fun Data.Set.Internal.Tip () LSet)
(declare-fun GHC.Types.Module () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun Main.die () Int)
(declare-fun lq_tmp$36$x$35$$35$4653 () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lq_tmp$36$x$35$$35$3316 () Int)
(declare-fun lq_tmp$36$x$35$$35$2261 () Int)
(declare-fun lq_tmp$36$x$35$$35$2490 () Int)
(declare-fun fromJust () Int)
(declare-fun lit$36$Main () Str)
(declare-fun Data.Set.Internal.null () Int)
(declare-fun x_Tuple71 () Int)
(declare-fun lit$36$main () Str)
(declare-fun GHC.IO.Handle.Lock.Common.SharedLock () Int)
(declare-fun lq_tmp$36$x$35$$35$3554 () Int)
(declare-fun lq_tmp$36$x$35$$35$1574 () Int)
(declare-fun GHC.IO.IOMode.ReadMode () Int)
(declare-fun GHC.Exception.Type.SomeException () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805707$35$$35$d39h () Int)
(declare-fun lq_karg$36$VV$35$$35$1084$35$$35$k_$35$$35$1085 () Int)
(declare-fun VV$35$$35$F$35$$35$147 () Int)
(declare-fun Data.Set.Internal.member () Int)
(declare-fun lq_tmp$36$x$35$$35$4699 () Int)
(declare-fun lq_tmp$36$x$35$$35$3144 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun ds_d318 () Int)
(declare-fun lq_tmp$36$x$35$$35$3797 () Int)
(declare-fun GHC.IO.IOMode.ReadWriteMode () Int)
(declare-fun lq_tmp$36$x$35$$35$2878 () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun lq_tmp$36$x$35$$35$2250 () Int)
(declare-fun lq_tmp$36$x$35$$35$2711 () Int)
(declare-fun Data.OldList.nub () Int)
(declare-fun lq_tmp$36$x$35$$35$4133 () Int)
(declare-fun lq_tmp$36$x$35$$35$1972 () Int)
(declare-fun lq_tmp$36$x$35$$35$2983 () Int)
(declare-fun addrLen () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun lq_tmp$36$x$35$$35$1966 () Int)
(declare-fun papp3 () Int)
(declare-fun lq_tmp$36$x$35$$35$1991 () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun x_Tuple54 () Int)
(declare-fun lq_tmp$36$x$35$$35$4639 () Int)
(declare-fun GHC.IO.Device.AbsoluteSeek () Int)
(declare-fun lq_tmp$36$x$35$$35$3399 () Int)
(declare-fun Main.main () Int)
(declare-fun lq_tmp$36$x$35$$35$1020 () Int)
(declare-fun Data.Foldable.null () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805701$35$$35$d39b () Str)
(declare-fun ds_d31i () Int)
(declare-fun lq_tmp$36$x$35$$35$1882 () Int)
(declare-fun x_Tuple64 () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1956 () Int)
(declare-fun lq_tmp$36$x$35$$35$879 () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun lq_tmp$36$x$35$$35$4186 () Int)
(declare-fun VV$35$$35$F$35$$35$152 () Str)
(declare-fun lq_tmp$36$x$35$$35$4654 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805705$35$$35$d39f () Int)
(declare-fun lit$36$error () Str)
(declare-fun lq_tmp$36$x$35$$35$1794 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805709$35$$35$d39j () Int)
(declare-fun lq_tmp$36$x$35$$35$3091 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805755$35$$35$d3a3 () Int)
(declare-fun l$35$$35$a1Yo () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun x_Tuple61 () Int)
(declare-fun GHC.List.init () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun lq_tmp$36$x$35$$35$4381 () Int)
(declare-fun lq_tmp$36$x$35$$35$2905 () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun cs$35$$35$a1Yn () Int)
(declare-fun GHC.List.break () Int)
(declare-fun lq_tmp$36$x$35$$35$2994 () Int)
(declare-fun lq_tmp$36$x$35$$35$3094 () Int)
(declare-fun lq_tmp$36$x$35$$35$1700 () Int)
(declare-fun Main.getModel () Int)
(declare-fun lq_tmp$36$x$35$$35$1788 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805712$35$$35$d39m () Int)
(declare-fun GHC.IO.Handle.Text.hGetBufNonBlocking () Int)
(declare-fun lq_tmp$36$x$35$$35$2092 () Int)
(declare-fun lq_tmp$36$x$35$$35$2496 () Int)
(declare-fun lq_tmp$36$x$35$$35$2704 () Int)
(declare-fun Data.Set.Internal.difference () Int)
(declare-fun x_Tuple77 () Int)
(declare-fun literal$35$$35$a1Yq () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$1945 () Int)
(declare-fun GHC.IO.Handle.Lock.Common.ExclusiveLock () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun lq_tmp$36$x$35$$35$2344 () Int)
(declare-fun lq_tmp$36$x$35$$35$3921 () Int)
(declare-fun lq_tmp$36$x$35$$35$1866 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805764$35$$35$d3ac () Int)
(declare-fun GHC.IO.Handle.Types.BlockBuffering () Int)
(declare-fun Data.Set.Internal.intersection () Int)
(declare-fun lq_karg$36$ds_d318$35$$35$k_$35$$35$1085 () Int)
(declare-fun lq_tmp$36$x$35$$35$2913 () Int)
(declare-fun GHC.Stack.Types.emptyCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$4041 () Int)
(declare-fun lq_tmp$36$x$35$$35$2425 () Int)
(declare-fun x_Tuple72 () Int)
(declare-fun lq_tmp$36$x$35$$35$3960 () Int)
(declare-fun cast_as () Int)
(declare-fun GHC.Ptr.Ptr () Int)
(declare-fun GHC.List.head () Int)
(declare-fun Data.Set.Internal.Bin () Int)
(declare-fun Main.chooseLiteral$39$ () Int)
(declare-fun VV$35$$35$F$35$$35$144 () Int)
(declare-fun l$35$$35$a1Ye () Int)
(declare-fun cast_as_int () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$44$$44$$44$$41$ () Int)
(declare-fun lq_tmp$36$x$35$$35$2841 () Int)
(declare-fun lq_tmp$36$x$35$$35$3141 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805742$35$$35$d39Q () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805756$35$$35$d3a4 () Int)
(declare-fun GHC.Base.$36$fMonadIO () Int)
(declare-fun x_Tuple42 () Int)
(declare-fun lq_tmp$36$x$35$$35$3914 () Int)
(declare-fun fix$36$$58$Main.main () Int)
(declare-fun lq_tmp$36$x$35$$35$1969 () Int)
(declare-fun lq_tmp$36$x$35$$35$1970 () Int)
(declare-fun len () Int)
(declare-fun GHC.IO.Handle.HandlePosn () Int)
(declare-fun lq_tmp$36$x$35$$35$2317 () Int)
(declare-fun lq_tmp$36$x$35$$35$2894 () Int)
(declare-fun lq_tmp$36$x$35$$35$3194 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805752$35$$35$d3a0 () Int)
(declare-fun Data.Foldable.concat () Int)
(declare-fun lq_tmp$36$x$35$$35$3076 () Int)
(declare-fun Data.Set.Internal.empty () LSet)
(declare-fun Main.litsF () Int)
(declare-fun lq_tmp$36$x$35$$35$4701 () Int)
(declare-fun lq_tmp$36$x$35$$35$2404 () Int)
(declare-fun lq_tmp$36$x$35$$35$1939 () Int)
(declare-fun Main.solveSAT () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_tmp$36$x$35$$35$1964 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp1 () Int)
(declare-fun lq_tmp$36$x$35$$35$953 () Int)
(declare-fun lq_tmp$36$x$35$$35$2899 () Int)
(declare-fun GHC.TopHandler.runMainIO () Int)
(declare-fun lq_tmp$36$x$35$$35$3687 () Int)
(declare-fun lq_tmp$36$x$35$$35$3385 () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun lq_tmp$36$x$35$$35$2722 () Int)
(declare-fun listElts () Int)
(declare-fun lq_tmp$36$x$35$$35$1963 () Int)
(declare-fun GHC.IO.IOMode.AppendMode () Int)
(declare-fun papp6 () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun GHC.IO.Handle.Types.$36$WHandle__ () Int)
(declare-fun x_Tuple51 () Int)
(declare-fun lq_tmp$36$x$35$$35$2197 () Int)
(declare-fun lq_tmp$36$x$35$$35$2395 () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$44$$41$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1595 () Int)
(declare-fun ds_d31j () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun liquid_internal_this () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun fldList () Int)
(declare-fun lq_tmp$36$x$35$$35$2992 () Int)
(declare-fun VV$35$$35$F$35$$35$148 () Str)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Maybe.Just$35$$35$1 () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1820 () Int)
(declare-fun x_Tuple75 () Int)
(declare-fun lq_tmp$36$x$35$$35$2339 () Int)
(declare-fun literal$35$$35$a1Ys () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_tmp$36$x$35$$35$2100 () Int)
(declare-fun lq_tmp$36$x$35$$35$2302 () Int)
(declare-fun lq_tmp$36$x$35$$35$2999 () Int)
(declare-fun lq_tmp$36$x$35$$35$1486 () Int)
(declare-fun GHC.IO.Device.RelativeSeek () Int)
(declare-fun GHC.IO.Device.SeekFromEnd () Int)
(declare-fun lq_tmp$36$x$35$$35$1332 () Int)
(declare-fun lq_tmp$36$x$35$$35$1174 () Int)
(declare-fun GHC.Num.Integer.IS () Int)
(declare-fun lq_tmp$36$x$35$$35$1376 () Int)
(declare-fun lq_tmp$36$x$35$$35$2696 () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun lq_rnm$36$fldList$35$$35$716 () Int)
(declare-fun lq_tmp$36$x$35$$35$3555 () Int)
(declare-fun lq_tmp$36$x$35$$35$1575 () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$44$$44$$44$$44$$41$ () Int)
(declare-fun lq_karg$36$VV$35$$35$759$35$$35$k_$35$$35$760 () Str)
(declare-fun VV$35$$35$F$35$$35$146 () Int)
(declare-fun lq_tmp$36$x$35$$35$1777 () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun x_Tuple44 () Int)
(declare-fun Main.propagate () Int)
(declare-fun lit$36$app$47$Main.hs () Str)
(declare-fun fst () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun lq_tmp$36$x$35$$35$2355 () Int)
(declare-fun lq_tmp$36$x$35$$35$3828 () Int)
(declare-fun GHC.IO.Handle.hFileSize () Int)
(declare-fun lq_tmp$36$x$35$$35$1808 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805716$35$$35$d39q$35$$35$k_$35$$35$1085 () Str)
(declare-fun lq_tmp$36$x$35$$35$2964 () Int)
(declare-fun lq_tmp$36$x$35$$35$2399 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun Data.Set.Internal.$36$WBin () Int)
(declare-fun lq_tmp$36$x$35$$35$2920 () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun Data.Set.Internal.fromList () Int)
(declare-fun x_Tuple41 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805719$35$$35$d39t () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun lq_tmp$36$x$35$$35$4132 () Int)
(declare-fun lq_tmp$36$x$35$$35$2350 () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun lq_tmp$36$x$35$$35$2961 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$44$$44$$41$ () Int)
(declare-fun autolen () Int)
(declare-fun lq_tmp$36$x$35$$35$3142 () Int)
(declare-fun lq_tmp$36$x$35$$35$4668 () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun lq_tmp$36$x$35$$35$2401 () Int)
(declare-fun GHC.List.take () Int)
(declare-fun lq_tmp$36$x$35$$35$3084 () Int)
(declare-fun lq_tmp$36$x$35$$35$2566 () Int)
(declare-fun lq_tmp$36$x$35$$35$1879 () Int)
(declare-fun lq_tmp$36$x$35$$35$3958 () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Base.return () Int)
(declare-fun lq_tmp$36$x$35$$35$4344 () Int)
(declare-fun lq_tmp$36$x$35$$35$3477 () Int)
(declare-fun x_Tuple53 () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun Data.Foldable.$36$fFoldable$91$$93$ () Int)
(declare-fun Main.litsC () Int)
(declare-fun GHC.Stack.Types.pushCallStack () Int)
(declare-fun x_Tuple65 () Int)
(declare-fun lq_tmp$36$x$35$$35$878 () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun GHC.Stack.Types.SrcLoc () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun ds_d38y () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun Main.pureLiteralAssign () Int)
(declare-fun lq_tmp$36$x$35$$35$1704 () Int)
(declare-fun lq_tmp$36$x$35$$35$1021 () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_tmp$36$x$35$$35$2033 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805710$35$$35$d39k () Int)
(declare-fun lq_tmp$36$x$35$$35$1883 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o () Int)
(declare-fun lq_tmp$36$x$35$$35$4180 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun lq_tmp$36$x$35$$35$2348 () Int)
(declare-fun head () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805721$35$$35$d39v () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun lq_tmp$36$x$35$$35$1703 () Int)
(declare-fun x_Tuple62 () Int)
(declare-fun lq_tmp$36$x$35$$35$3493 () Int)
(declare-fun Main.chooseLiteral () Int)
(declare-fun lq_tmp$36$x$35$$35$1485 () Int)
(declare-fun GHC.Num.Integer.IP () Int)
(declare-fun l$35$$35$a1Ya () Int)
(declare-fun lq_tmp$36$x$35$$35$1818 () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun lq_tmp$36$x$35$$35$2507 () Int)
(declare-fun x_Tuple76 () Int)
(declare-fun lq_tmp$36$x$35$$35$4590 () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun lq_tmp$36$x$35$$35$4589 () Int)
(declare-fun Data.Set.Internal.delete () Int)
(declare-fun lq_tmp$36$x$35$$35$3796 () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun Main.unitPropagate () Int)
(declare-fun lq_tmp$36$x$35$$35$3880 () Int)
(declare-fun lq_tmp$36$x$35$$35$4135 () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805715$35$$35$d39p$35$$35$k_$35$$35$1085 () Str)
(declare-fun lq_tmp$36$x$35$$35$4337 () Int)
(declare-fun lq_tmp$36$x$35$$35$4698 () Int)
(declare-fun Data.Set.Internal.isSubsetOf () Int)
(declare-fun lq_tmp$36$x$35$$35$2328 () Int)
(declare-fun GHC.IO.Handle.Types.LineBuffering () Int)
(declare-fun lq_tmp$36$x$35$$35$2988 () Int)
(declare-fun lq_tmp$36$x$35$$35$3145 () Int)
(declare-fun lq_tmp$36$x$35$$35$2584 () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun Data.Foldable.any () Int)
(declare-fun x_Tuple43 () Int)
(declare-fun GHC.Num.Integer.IN () Int)
(declare-fun lq_tmp$36$x$35$$35$920 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805760$35$$35$d3a8 () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun lq_tmp$36$x$35$$35$2840 () Int)
(declare-fun lq_tmp$36$x$35$$35$2581 () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun Data.Typeable.Internal.C$58$Typeable () Int)
(declare-fun lq_tmp$36$x$35$$35$2408 () Int)
(declare-fun lq_tmp$36$x$35$$35$1967 () Int)
(declare-fun papp2 () Int)
(declare-fun lq_tmp$36$x$35$$35$3471 () Int)
(declare-fun x_Tuple55 () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lq_tmp$36$x$35$$35$4621 () Int)
(declare-fun lq_tmp$36$x$35$$35$914 () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun lq_tmp$36$x$35$$35$3435 () Int)
(declare-fun lq_tmp$36$x$35$$35$1257 () Int)
(declare-fun GHC.IO.Handle.Types.$36$WDuplexHandle () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun GHC.IO.Handle.Types.CRLF () Int)
(declare-fun apply$35$$35$21 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$4 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$24 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$22 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$11 (Int Str) Bool)
(declare-fun apply$35$$35$13 (Int Str) LSet)
(declare-fun apply$35$$35$3 (Int Int) LSet)
(declare-fun apply$35$$35$15 (Int LSet) Int)
(declare-fun apply$35$$35$5 (Int Bool) Int)
(declare-fun apply$35$$35$12 (Int Str) Str)
(declare-fun apply$35$$35$14 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$19 (Int LSet) (_ BitVec 32))
(declare-fun apply$35$$35$17 (Int LSet) Str)
(declare-fun apply$35$$35$20 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$10 (Int Str) Int)
(declare-fun apply$35$$35$18 (Int LSet) LSet)
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$16 (Int LSet) Bool)
(declare-fun apply$35$$35$7 (Int Bool) Str)
(declare-fun apply$35$$35$9 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$6 (Int Bool) Bool)
(declare-fun apply$35$$35$8 (Int Bool) LSet)
(declare-fun apply$35$$35$23 (Int (_ BitVec 32)) LSet)
(declare-fun coerce$35$$35$21 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$4 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$24 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$22 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$11 (Str) Bool)
(declare-fun coerce$35$$35$13 (Str) LSet)
(declare-fun coerce$35$$35$3 (Int) LSet)
(declare-fun coerce$35$$35$15 (LSet) Int)
(declare-fun coerce$35$$35$5 (Bool) Int)
(declare-fun coerce$35$$35$12 (Str) Str)
(declare-fun coerce$35$$35$14 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$19 (LSet) (_ BitVec 32))
(declare-fun coerce$35$$35$17 (LSet) Str)
(declare-fun coerce$35$$35$20 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$10 (Str) Int)
(declare-fun coerce$35$$35$18 (LSet) LSet)
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$16 (LSet) Bool)
(declare-fun coerce$35$$35$7 (Bool) Str)
(declare-fun coerce$35$$35$9 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$6 (Bool) Bool)
(declare-fun coerce$35$$35$8 (Bool) LSet)
(declare-fun coerce$35$$35$23 ((_ BitVec 32)) LSet)
(declare-fun smt_lambda$35$$35$21 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$4 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$24 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$22 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$13 (Str LSet) Int)
(declare-fun smt_lambda$35$$35$3 (Int LSet) Int)
(declare-fun smt_lambda$35$$35$15 (LSet Int) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$12 (Str Str) Int)
(declare-fun smt_lambda$35$$35$14 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$19 (LSet (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$17 (LSet Str) Int)
(declare-fun smt_lambda$35$$35$20 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$10 (Str Int) Int)
(declare-fun smt_lambda$35$$35$18 (LSet LSet) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$16 (LSet Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$9 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$8 (Bool LSet) Int)
(declare-fun smt_lambda$35$$35$23 ((_ BitVec 32) LSet) Int)
(declare-fun lam_arg$35$$35$1$35$$35$15 () LSet)
(declare-fun lam_arg$35$$35$2$35$$35$15 () LSet)
(declare-fun lam_arg$35$$35$3$35$$35$15 () LSet)
(declare-fun lam_arg$35$$35$4$35$$35$15 () LSet)
(declare-fun lam_arg$35$$35$5$35$$35$15 () LSet)
(declare-fun lam_arg$35$$35$6$35$$35$15 () LSet)
(declare-fun lam_arg$35$$35$7$35$$35$15 () LSet)
(declare-fun lam_arg$35$$35$1$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$1$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)





(assert (distinct lit$36$app$47$Main.hs lit$36$error lit$36$main lit$36$Main lit$36$chooseLiteral$39$$58$$32$empty$32$list))
(assert (distinct GHC.IO.Handle.Lock.Common.ExclusiveLock GHC.IO.Handle.Lock.Common.SharedLock))


(assert (distinct GHC.IO.Device.SeekFromEnd GHC.IO.Device.RelativeSeek GHC.IO.Device.AbsoluteSeek))
(assert (distinct GHC.Types.GT GHC.Types.EQ GHC.Types.LT))
(assert (distinct GHC.IO.Handle.Types.LineBuffering GHC.IO.Handle.Types.NoBuffering))
(assert (distinct GHC.Types.False GHC.Types.True))
(assert (distinct GHC.IO.Handle.Types.CRLF GHC.IO.Handle.Types.LF))
(assert (distinct GHC.IO.IOMode.AppendMode GHC.IO.IOMode.ReadWriteMode GHC.IO.IOMode.ReadMode GHC.IO.IOMode.WriteMode))
(assert (= (strLen lit$36$chooseLiteral$39$$58$$32$empty$32$list) 26))
(assert (= (strLen lit$36$Main) 4))
(assert (= (strLen lit$36$main) 4))
(assert (= (strLen lit$36$error) 5))
(assert (= (strLen lit$36$app$47$Main.hs) 11))
(push 1)
(define-fun b$36$$35$$35$160 () Bool (= lq_anf$36$$35$$35$7205759403792805704$35$$35$d39e lq_anf$36$$35$$35$7205759403792805703$35$$35$d39d))
(define-fun b$36$$35$$35$161 () Bool (= lq_anf$36$$35$$35$7205759403792805705$35$$35$d39f 7))
(define-fun b$36$$35$$35$162 () Bool (= lq_anf$36$$35$$35$7205759403792805706$35$$35$d39g lq_anf$36$$35$$35$7205759403792805705$35$$35$d39f))
(define-fun b$36$$35$$35$163 () Bool (= lq_anf$36$$35$$35$7205759403792805707$35$$35$d39h 114))
(define-fun b$36$$35$$35$164 () Bool (= lq_anf$36$$35$$35$7205759403792805708$35$$35$d39i lq_anf$36$$35$$35$7205759403792805707$35$$35$d39h))
(define-fun b$36$$35$$35$165 () Bool (= lq_anf$36$$35$$35$7205759403792805709$35$$35$d39j 12))
(define-fun b$36$$35$$35$166 () Bool (= lq_anf$36$$35$$35$7205759403792805710$35$$35$d39k lq_anf$36$$35$$35$7205759403792805709$35$$35$d39j))
(define-fun b$36$$35$$35$105 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$169 () Bool (and (= (apply$35$$35$2 (as fst Int) lq_anf$36$$35$$35$7205759403792805712$35$$35$d39m) lq_anf$36$$35$$35$7205759403792805696$35$$35$d396) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792805712$35$$35$d39m) lq_anf$36$$35$$35$7205759403792805711$35$$35$d39l) (= (apply$35$$35$2 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792805712$35$$35$d39m) lq_anf$36$$35$$35$7205759403792805696$35$$35$d396) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792805712$35$$35$d39m) lq_anf$36$$35$$35$7205759403792805711$35$$35$d39l)))
(define-fun b$36$$35$$35$174 () Bool (and (not (= (apply$35$$35$3 Main.litsF ds_d318) smt_set_emp)) (>= (apply$35$$35$0 (as len Int) ds_d318) 0)))
(define-fun b$36$$35$$35$111 () Bool GHC.Types.True)
(define-fun b$36$$35$$35$175 () Bool (and (= lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o ds_d318) (not (= (apply$35$$35$3 Main.litsF lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) smt_set_emp)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) 0)))
(define-fun b$36$$35$$35$176 () Bool (and (= lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o ds_d318) (not (= (apply$35$$35$3 Main.litsF lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) smt_set_emp)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) 0)))
(define-fun b$36$$35$$35$720 () Bool (= VV$35$$35$F$35$$35$144 l$35$$35$a1Yo))
(define-fun b$36$$35$$35$177 () Bool (and (= smt_set_emp (apply$35$$35$3 (as listElts Int) lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o)) (= lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o ds_d318) (= (apply$35$$35$3 Main.litsF lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) smt_set_emp) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) 0) (not (= (apply$35$$35$3 Main.litsF lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) smt_set_emp)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) 0)))
(define-fun b$36$$35$$35$721 () Bool (smt_set_mem VV$35$$35$F$35$$35$145 (apply$35$$35$3 Main.litsF cs$35$$35$a1Yn)))
(define-fun b$36$$35$$35$178 () Bool (= lq_anf$36$$35$$35$7205759403792805715$35$$35$d39p lit$36$chooseLiteral$39$$58$$32$empty$32$list))
(define-fun b$36$$35$$35$722 () Bool (and (= VV$35$$35$F$35$$35$146 cs$35$$35$a1Yn) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$146) 0)))
(define-fun b$36$$35$$35$179 () Bool (and (= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792805716$35$$35$d39q) (strLen lq_anf$36$$35$$35$7205759403792805715$35$$35$d39p)) (>= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792805716$35$$35$d39q) 0) (= lq_anf$36$$35$$35$7205759403792805716$35$$35$d39q lq_anf$36$$35$$35$7205759403792805715$35$$35$d39p)))
(define-fun b$36$$35$$35$180 () Bool (and (= lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o ds_d318) (not (= (apply$35$$35$3 Main.litsF lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) smt_set_emp)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) 0)))
(define-fun b$36$$35$$35$724 () Bool (and (= VV$35$$35$F$35$$35$148 lq_anf$36$$35$$35$7205759403792805716$35$$35$d39q) (= (apply$35$$35$10 (as len Int) VV$35$$35$F$35$$35$148) (strLen lq_anf$36$$35$$35$7205759403792805715$35$$35$d39p)) (>= (apply$35$$35$10 (as len Int) VV$35$$35$F$35$$35$148) 0) (= VV$35$$35$F$35$$35$148 lq_anf$36$$35$$35$7205759403792805715$35$$35$d39p)))
(define-fun b$36$$35$$35$181 () Bool (>= (apply$35$$35$0 (as len Int) ds_d31i) 0))
(define-fun b$36$$35$$35$725 () Bool (and GHC.Types.False (>= (apply$35$$35$10 (as len Int) VV$35$$35$F$35$$35$149) 0)))
(define-fun b$36$$35$$35$182 () Bool (>= (apply$35$$35$0 (as len Int) cs$35$$35$a1Yn) 0))
(define-fun b$36$$35$$35$151 () Bool (= lq_anf$36$$35$$35$7205759403792805695$35$$35$d395 lit$36$error))
(define-fun b$36$$35$$35$183 () Bool (and (= lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o ds_d318) (= lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d31i) cs$35$$35$a1Yn)) (= (apply$35$$35$3 Main.litsF lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) (smt_set_cup (apply$35$$35$3 Main.litsF cs$35$$35$a1Yn) (apply$35$$35$3 Main.litsC ds_d31i))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) ds_d31i) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) (+ 1 (apply$35$$35$0 (as len Int) cs$35$$35$a1Yn))) (= (apply$35$$35$3 (as listElts Int) lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) (smt_set_cup (smt_set_sng ds_d31i) (apply$35$$35$3 (as listElts Int) cs$35$$35$a1Yn))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) cs$35$$35$a1Yn) (not (= (apply$35$$35$3 Main.litsF lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) smt_set_emp)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805714$35$$35$d39o) 0)))
(define-fun b$36$$35$$35$152 () Bool (and (= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792805696$35$$35$d396) (strLen lq_anf$36$$35$$35$7205759403792805695$35$$35$d395)) (>= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792805696$35$$35$d396) 0) (= lq_anf$36$$35$$35$7205759403792805696$35$$35$d396 lq_anf$36$$35$$35$7205759403792805695$35$$35$d395)))
(define-fun b$36$$35$$35$184 () Bool (and (= lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r ds_d31i) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r) 0)))
(define-fun b$36$$35$$35$153 () Bool (= lq_anf$36$$35$$35$7205759403792805697$35$$35$d397 lit$36$main))
(define-fun b$36$$35$$35$185 () Bool (and (= lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r ds_d31i) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r) 0)))
(define-fun b$36$$35$$35$154 () Bool (and (= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792805698$35$$35$d398) (strLen lq_anf$36$$35$$35$7205759403792805697$35$$35$d397)) (>= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792805698$35$$35$d398) 0) (= lq_anf$36$$35$$35$7205759403792805698$35$$35$d398 lq_anf$36$$35$$35$7205759403792805697$35$$35$d397)))
(define-fun b$36$$35$$35$186 () Bool (and (= smt_set_emp (apply$35$$35$3 (as listElts Int) lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r)) (= lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r ds_d31i) (= (apply$35$$35$3 Main.litsC lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r) smt_set_emp) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r) 0)))
(define-fun b$36$$35$$35$155 () Bool (= lq_anf$36$$35$$35$7205759403792805699$35$$35$d399 lit$36$Main))
(define-fun b$36$$35$$35$187 () Bool (and (= lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r ds_d31i) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r) 0)))
(define-fun b$36$$35$$35$156 () Bool (and (= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792805700$35$$35$d39a) (strLen lq_anf$36$$35$$35$7205759403792805699$35$$35$d399)) (>= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792805700$35$$35$d39a) 0) (= lq_anf$36$$35$$35$7205759403792805700$35$$35$d39a lq_anf$36$$35$$35$7205759403792805699$35$$35$d399)))
(define-fun b$36$$35$$35$157 () Bool (= lq_anf$36$$35$$35$7205759403792805701$35$$35$d39b lit$36$app$47$Main.hs))
(define-fun b$36$$35$$35$189 () Bool (>= (apply$35$$35$0 (as len Int) ds_d31j) 0))
(define-fun b$36$$35$$35$158 () Bool (and (= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792805702$35$$35$d39c) (strLen lq_anf$36$$35$$35$7205759403792805701$35$$35$d39b)) (>= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792805702$35$$35$d39c) 0) (= lq_anf$36$$35$$35$7205759403792805702$35$$35$d39c lq_anf$36$$35$$35$7205759403792805701$35$$35$d39b)))
(define-fun b$36$$35$$35$190 () Bool (and (= lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r ds_d31i) (= lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) l$35$$35$a1Yo) ds_d31j)) (= (apply$35$$35$3 Main.litsC lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r) (smt_set_cup (apply$35$$35$3 Main.litsC ds_d31j) (smt_set_sng l$35$$35$a1Yo))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r) l$35$$35$a1Yo) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r) (+ 1 (apply$35$$35$0 (as len Int) ds_d31j))) (= (apply$35$$35$3 (as listElts Int) lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r) (smt_set_cup (smt_set_sng l$35$$35$a1Yo) (apply$35$$35$3 (as listElts Int) ds_d31j))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r) ds_d31j) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805717$35$$35$d39r) 0)))
(define-fun b$36$$35$$35$159 () Bool (= lq_anf$36$$35$$35$7205759403792805703$35$$35$d39d 114))
(push 1)
(push 1)
(assert (and true b$36$$35$$35$105 b$36$$35$$35$174 b$36$$35$$35$111 b$36$$35$$35$175 b$36$$35$$35$720 b$36$$35$$35$180 b$36$$35$$35$181 b$36$$35$$35$182 b$36$$35$$35$183 b$36$$35$$35$184 b$36$$35$$35$187 b$36$$35$$35$189 b$36$$35$$35$190))
(push 1)
(assert (not (smt_set_mem VV$35$$35$F$35$$35$144 (apply$35$$35$3 Main.litsF ds_d318))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$105 b$36$$35$$35$174 b$36$$35$$35$111 b$36$$35$$35$175 b$36$$35$$35$721 b$36$$35$$35$180 b$36$$35$$35$181 b$36$$35$$35$182 b$36$$35$$35$183 b$36$$35$$35$184 b$36$$35$$35$185 b$36$$35$$35$186))
(push 1)
(assert (not (smt_set_mem VV$35$$35$F$35$$35$145 (apply$35$$35$3 Main.litsF ds_d318))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$105 b$36$$35$$35$174 b$36$$35$$35$111 b$36$$35$$35$175 b$36$$35$$35$722 b$36$$35$$35$180 b$36$$35$$35$181 b$36$$35$$35$182 b$36$$35$$35$183 b$36$$35$$35$184 b$36$$35$$35$185 b$36$$35$$35$186))
(push 1)
(assert (not (not (= (apply$35$$35$3 Main.litsF VV$35$$35$F$35$$35$146) smt_set_emp))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$105 b$36$$35$$35$174 b$36$$35$$35$111 b$36$$35$$35$175 b$36$$35$$35$176 b$36$$35$$35$177 b$36$$35$$35$178 b$36$$35$$35$179))
(push 1)
(assert (not (smt_set_mem VV$35$$35$F$35$$35$147 (apply$35$$35$3 Main.litsF ds_d318))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$105 b$36$$35$$35$174 b$36$$35$$35$111 b$36$$35$$35$175 b$36$$35$$35$176 b$36$$35$$35$177 b$36$$35$$35$178 b$36$$35$$35$179 b$36$$35$$35$724))
(push 1)
(assert (not GHC.Types.False))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$VV$35$$35$759$35$$35$k_$35$$35$760 Str)) (and (= lq_karg$36$VV$35$$35$759$35$$35$k_$35$$35$760 VV$35$$35$F$35$$35$152) (exists ((VV$35$$35$F$35$$35$149 Str)) (and GHC.Types.False (>= (apply$35$$35$10 (as len Int) VV$35$$35$F$35$$35$149) 0) (= lq_karg$36$VV$35$$35$759$35$$35$k_$35$$35$760 VV$35$$35$F$35$$35$149))))) b$36$$35$$35$160 b$36$$35$$35$161 b$36$$35$$35$162 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$165 b$36$$35$$35$166 b$36$$35$$35$105 b$36$$35$$35$169 b$36$$35$$35$111 (>= (apply$35$$35$10 (as len Int) VV$35$$35$F$35$$35$152) 0) b$36$$35$$35$151 b$36$$35$$35$152 b$36$$35$$35$153 b$36$$35$$35$154 b$36$$35$$35$155 b$36$$35$$35$156 b$36$$35$$35$157 b$36$$35$$35$158 b$36$$35$$35$159))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(exit)
